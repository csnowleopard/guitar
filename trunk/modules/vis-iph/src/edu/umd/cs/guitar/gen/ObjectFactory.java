//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.02.26 at 12:45:39 AM EST 
//


package edu.umd.cs.guitar.gen;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the edu.umd.cs.guitar.efg package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: edu.umd.cs.guitar.efg
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link MappingType }
     * 
     */
    public MappingType createMappingType() {
        return new MappingType();
    }

    /**
     * Create an instance of {@link PropertyType }
     * 
     */
    public PropertyType createPropertyType() {
        return new PropertyType();
    }

    /**
     * Create an instance of {@link Mapping }
     * 
     */
    public Mapping createMapping() {
        return new Mapping();
    }

    /**
     * Create an instance of {@link LogWidget }
     * 
     */
    public LogWidget createLogWidget() {
        return new LogWidget();
    }

    /**
     * Create an instance of {@link TestCase }
     * 
     */
    public TestCase createTestCase() {
        return new TestCase();
    }

    /**
     * Create an instance of {@link EdgeMappingType }
     * 
     */
    public EdgeMappingType createEdgeMappingType() {
        return new EdgeMappingType();
    }

    /**
     * Create an instance of {@link TestData }
     * 
     */
    public TestData createTestData() {
        return new TestData();
    }

    /**
     * Create an instance of {@link RowType }
     * 
     */
    public RowType createRowType() {
        return new RowType();
    }

    /**
     * Create an instance of {@link FullComponentType }
     * 
     */
    public FullComponentType createFullComponentType() {
        return new FullComponentType();
    }

    /**
     * Create an instance of {@link StepType }
     * 
     */
    public StepType createStepType() {
        return new StepType();
    }

    /**
     * Create an instance of {@link ContentsType }
     * 
     */
    public ContentsType createContentsType() {
        return new ContentsType();
    }

    /**
     * Create an instance of {@link Configuration }
     * 
     */
    public Configuration createConfiguration() {
        return new Configuration();
    }

    /**
     * Create an instance of {@link EventsType }
     * 
     */
    public EventsType createEventsType() {
        return new EventsType();
    }

    /**
     * Create an instance of {@link InitialMappingListType }
     * 
     */
    public InitialMappingListType createInitialMappingListType() {
        return new InitialMappingListType();
    }

    /**
     * Create an instance of {@link EventType }
     * 
     */
    public EventType createEventType() {
        return new EventType();
    }

    /**
     * Create an instance of {@link TestDataElementType }
     * 
     */
    public TestDataElementType createTestDataElementType() {
        return new TestDataElementType();
    }

    /**
     * Create an instance of {@link GUIType }
     * 
     */
    public GUIType createGUIType() {
        return new GUIType();
    }

    /**
     * Create an instance of {@link ComponentType }
     * 
     */
    public ComponentType createComponentType() {
        return new ComponentType();
    }

    /**
     * Create an instance of {@link ComponentListType }
     * 
     */
    public ComponentListType createComponentListType() {
        return new ComponentListType();
    }

    /**
     * Create an instance of {@link EventGraphType }
     * 
     */
    public EventGraphType createEventGraphType() {
        return new EventGraphType();
    }

    /**
     * Create an instance of {@link ContainerType }
     * 
     */
    public ContainerType createContainerType() {
        return new ContainerType();
    }

    /**
     * Create an instance of {@link AttributesType }
     * 
     */
    public AttributesType createAttributesType() {
        return new AttributesType();
    }

    /**
     * Create an instance of {@link EdgeMappingListType }
     * 
     */
    public EdgeMappingListType createEdgeMappingListType() {
        return new EdgeMappingListType();
    }

    /**
     * Create an instance of {@link InitialMappingType }
     * 
     */
    public InitialMappingType createInitialMappingType() {
        return new InitialMappingType();
    }

    /**
     * Create an instance of {@link EFG }
     * 
     */
    public EFG createEFG() {
        return new EFG();
    }

    /**
     * Create an instance of {@link GUIStructure }
     * 
     */
    public GUIStructure createGUIStructure() {
        return new GUIStructure();
    }

    /**
     * Create an instance of {@link PathType }
     * 
     */
    public PathType createPathType() {
        return new PathType();
    }

}
